START
start parsifying text:
Parlè?
parsed :D


 JSON:
{
<<<<<<< HEAD
  "docDate": "2020-10-17",
  "timings": "Annotation pipeline timing information:\r\nItalianTokenizerAnnotator: 0.0 sec.\r\nPOSTaggerAnnotator: 0.0 sec.\r\nDigiMorphAnnotator: 0.0 sec.\r\nDigiLemmaAnnotator: 0.0 sec.\r\nNERCombinerAnnotator: 0.0 sec.\r\nDependencyParseAnnotator: 0.0 sec.\r\nStanfordToConllDepsAnnotator: 0.0 sec.\r\nTOTAL: 0.0 sec. for 3 tokens at 600,0 tokens/sec.",
=======
  "docDate": "2020-10-19",
  "timings": "Annotation pipeline timing information:\r\nItalianTokenizerAnnotator: 0.0 sec.\r\nPOSTaggerAnnotator: 0.0 sec.\r\nDigiMorphAnnotator: 0.0 sec.\r\nDigiLemmaAnnotator: 0.0 sec.\r\nNERCombinerAnnotator: 0.0 sec.\r\nDependencyParseAnnotator: 0.0 sec.\r\nStanfordToConllDepsAnnotator: 0.0 sec.\r\nTOTAL: 0.0 sec. for 3 tokens at 250,0 tokens/sec.",
>>>>>>> marco
  "sentences": [
    {
      "index": 0,
      "characterOffsetBegin": 0,
      "characterOffsetEnd": 7,
      "text": "parl???",
      "basic-dependencies": [
        {
          "dep": "ROOT",
          "governor": 0,
          "governorGloss": "ROOT",
          "dependent": 1,
          "dependentGloss": "parl?"
        },
        {
          "dep": "name",
          "governor": 1,
          "governorGloss": "parl?",
          "dependent": 2,
          "dependentGloss": "?"
        },
        {
          "dep": "punct",
          "governor": 1,
          "governorGloss": "parl?",
          "dependent": 3,
          "dependentGloss": "?"
        }
      ],
      "collapsed-dependencies": [
        {
          "dep": "ROOT",
          "governor": 0,
          "governorGloss": "ROOT",
          "dependent": 1,
          "dependentGloss": "parl?"
        },
        {
          "dep": "name",
          "governor": 1,
          "governorGloss": "parl?",
          "dependent": 2,
          "dependentGloss": "?"
        },
        {
          "dep": "punct",
          "governor": 1,
          "governorGloss": "parl?",
          "dependent": 3,
          "dependentGloss": "?"
        }
      ],
      "collapsed-ccprocessed-dependencies": [
        {
          "dep": "ROOT",
          "governor": 0,
          "governorGloss": "ROOT",
          "dependent": 1,
          "dependentGloss": "parl?"
        },
        {
          "dep": "name",
          "governor": 1,
          "governorGloss": "parl?",
          "dependent": 2,
          "dependentGloss": "?"
        },
        {
          "dep": "punct",
          "governor": 1,
          "governorGloss": "parl?",
          "dependent": 3,
          "dependentGloss": "?"
        }
      ],
      "parse": "SENTENCE_SKIPPED_OR_UNPARSABLE",
      "tokens": [
        {
          "index": 1,
          "word": "parl?",
          "originalText": "parl?",
          "lemma": "parl?",
          "characterOffsetBegin": 0,
          "characterOffsetEnd": 5,
          "pos": "SP",
          "featuresText": "",
          "ner": "O",
          "full_morpho": "parl?",
          "selected_morpho": "",
          "guessed_lemma": true,
          "features": {}
        },
        {
          "index": 2,
          "word": "?",
          "originalText": "?",
          "lemma": "?",
          "characterOffsetBegin": 5,
          "characterOffsetEnd": 6,
          "pos": "X",
          "featuresText": "",
          "ner": "O",
          "full_morpho": "?",
          "selected_morpho": "",
          "guessed_lemma": true,
          "features": {}
        },
        {
          "index": 3,
          "word": "?",
          "originalText": "?",
          "lemma": "?",
          "characterOffsetBegin": 6,
          "characterOffsetEnd": 7,
          "pos": "FS",
          "featuresText": "",
          "ner": "O",
          "full_morpho": "? [PUNCT] [PUNCT]",
          "selected_morpho": "",
          "guessed_lemma": true,
          "features": {}
        }
      ]
    }
  ]
}


 Now build the tree:
built :D


TreeParsedSentence
root:

NDTTint [gloss= parl?, pos= SP , lemma=parl? , indexID=1, dep= ROOT , isRoot=T, father=none :D, features= [, children= [
	NDTTint [gloss= ?, pos= X , lemma=? , indexID=2, dep= name , isRoot=F, father=1-parl?, features= [, children= []
	NDTTint [gloss= ?, pos= FS , lemma=? , indexID=3, dep= punct , isRoot=F, father=1-parl?, features= [, children= []]
